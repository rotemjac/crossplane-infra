---
apiVersion: eks.aws.crossplane.io/v1alpha1
kind: NodeGroup
metadata:
  name: this-eks-node-group
spec:
  forProvider:

    #labels:
    #  k8s.io/cluster-autoscaler/enabled=true
    #  k8s.io/cluster-autoscaler/this-eks-cluster

    tags:
      kubernetes.io/cluster/this-eks-cluster: owned

    region: us-east-1
    clusterNameRef:
      name: this-eks-cluster
    subnetRefs:
      - name: this-subnet-a
      - name: this-subnet-b
      - name: this-subnet-c

    # K8S version
    version: "1.19"

    diskSize: 20
    instanceTypes: ["t3.medium"]
    amiType: "AL2_x86_64"

    # The AMI version of the Amazon EKS-optimized AMI to use with your node group. By default, the latest available AMI version for the node group's current Kubernetes version is used. For more information, see Amazon EKS-Optimized Linux AMI Versions (https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html) in the Amazon EKS User Guide.
    releaseVersion: ""

    scalingConfig:
      desiredSize: 2
      maxSize: 2
      minSize: 2

    nodeRoleRef:
      name: this-node-group-iam-role

  deletionPolicy: Delete
  providerConfigRef:
    name: aws-provider-config

---
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRole
metadata:
  labels:
    provider: aws
  name: this-node-group-iam-role
spec:
  forProvider:
    assumeRolePolicyDocument: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "ec2.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }

  providerConfigRef:
    name: aws-provider-config
  deletionPolicy: Delete
---
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRolePolicyAttachment
metadata:
  name: this-role-worker-node-policy
spec:
  forProvider:
    roleNameRef:
      name: this-node-group-iam-role
    # wellknown policy arn
    policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy

  providerConfigRef:
    name: aws-provider-config
  deletionPolicy: Delete

---
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRolePolicyAttachment
metadata:
  name: this-role-cni-policy
spec:
  forProvider:
    roleNameRef:
      name: this-node-group-iam-role
    # wellknown policy arn
    policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy

  providerConfigRef:
    name: aws-provider-config
  deletionPolicy: Delete

---
apiVersion: identity.aws.crossplane.io/v1beta1
kind: IAMRolePolicyAttachment
metadata:
  name: this-role-ec2-container-registry-read-only
spec:
  forProvider:
    roleNameRef:
      name: this-node-group-iam-role
    # wellknown policy arn
    policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  providerConfigRef:
    name: aws-provider-config
  deletionPolicy: Delete